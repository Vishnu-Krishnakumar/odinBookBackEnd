// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int        @id @default(autoincrement())
  firstname        String
  lastname         String
  email            String     @unique
  password         String
  profilepic       String?
  friends          Int[]
  posts            Post[]
  comments         Comment[]
}

model Message { 
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  message      String     @db.Text
  senderId     Int
  receiverId   Int
  groupId      String?
}

model Post { 
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  title     String     @db.VarChar(255)
  content   String     @db.Text
  comments  Comment[]
  likes     Int?       @default(0)
  author    User       @relation(fields: [authorId], references: [id], onDelete:Cascade)
  authorId  Int
}

model Comment{
  id        Int        @id @default(autoincrement())        
  username  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  content   String     @db.Text
  likes     Int?       @default(0)
  posts     Post       @relation(fields: [postId], references: [id], onDelete:Cascade)
  postId    Int
  author    User       @relation(fields: [authorId], references: [id], onDelete:Cascade)
  authorId  Int
}